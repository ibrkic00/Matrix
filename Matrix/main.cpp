#include <iostream>
#include "matrice1.h"
#include <vector>

using namespace std;

int main(void) {
    cout << "KONSTRUKTORI" << endl;
    matrica<int> A;
    matrica<int> B(4);
    matrica<int> C(4, -1);
    matrica<int> D(2, 5, 6);
    matrica<int> E(D);
    cout << A << endl;
    A.ispisDimenzija();
    cout << B << endl;
    B.ispisDimenzija();
    cout << C << endl;
    C.ispisDimenzija();
    cout << D << endl;
    D.ispisDimenzija();
    cout << E << endl;
    E.ispisDimenzija();
    E.dohvatiElement(0, 0) = 100;
    cout << E << endl;
    cout << D << endl;
    cout << "OPERATOR =" << endl;
    B = A = C;
    cout << B << endl;
    cout << C << endl;
    D = E;
    cout << D << E << endl;
    C = D;
    cout << "OPERATOR +=" << endl;
    A += B;
    B += C += C;
    D += E += E;
    cout << A << endl;
    cout << B << endl;
    cout << C << endl;
    cout << D << endl;
    cout << E << endl;
    cout << "OPERATOR -=" << endl;
    A -= B;
    B -= C -= C;
    D -= E;
    cout << A << endl;
    cout << B << endl;
    cout << C << endl;
    cout << D << endl;
    cout << E << endl;
    cout << "OPERATOR +" << endl;
    matrica<int> F = A + B;
    cout << F << endl;
    matrica<int> G = D + E;
    cout << G << endl;
    matrica<int> H = B + C;
    cout << H << endl;
    cout << "OPERATOR -" << endl;
    matrica<int> I = A - B;
    cout << I << endl;
    matrica<int> J = D - E;
    cout << J << endl;
    matrica<int> K = C - B;
    cout << K << endl;
    cout << "OPERATORI == I !=" << endl;
    cout << (A == B) << endl;
    cout << (A != B) << endl;
    matrica<int> L = K;
    cout << (L == K) << endl;
    cout << (L != K) << endl;
    L.dohvatiElement(0, 0) = -11;
    cout << (L == K) << endl;
    cout << (L != K) << endl;
    cout << "OPERATOR >>" << endl;
    A >> 5;
    cout << A << endl;
    B >> 2;
    cout << B << endl;
    B >> 1;
    cout << B << endl;
    B >> 0;
    cout << B << endl;
    D >> 10;
    cout << "OPERATOR *" << endl;
    matrica<int> M = B * C;
    cout << M << endl;
    matrica<int> N = B * B;
    cout << N << endl;
    matrica<int> O(5, 2, 1);
    O.dohvatiElement(0, 0) = 7; O.dohvatiElement(0, 1) = 10;
    O.dohvatiElement(1, 0) = 5; O.dohvatiElement(3, 1) = 3;
    cout << O << endl;
    matrica<int> P = D * O;
    cout << P << endl;
    matrica<int> LL = D * E;
    cout << "OPERATOR *=" << endl;
    P *= P;
    cout << P;
    D *= O;
    cout << D << endl;
    B *= B;
    cout << B << endl;

    vector<matrica<int>> V;
    V.reserve(5);
    matrica<int> a(2, 3, 3);
    matrica<int> b(3, 4, 1);
    matrica<int> c(3, 3, 8);
    matrica<int> d(2, 4, 9);
    cout << "ISPIS DIMENZIJA" << endl;
    a.ispisDimenzija();
    b.ispisDimenzija();
    c.ispisDimenzija();
    d.ispisDimenzija();
    cout << "DOHVATI ELEMENT" << endl;
    a.dohvatiElement(0, 0) = 1;
    a.dohvatiElement(0, 2) = 7;
    b.dohvatiElement(1, 0) = 0;
    c.dohvatiElement(2, 2) = 3;
    d.dohvatiElement(1, 1) = 5;

    cout << a << endl;
    cout << b << endl;
    cout << c << endl;
    cout << d << endl;

    V.push_back(a);
    V.push_back(b);
    V.push_back(c);
    V.push_back(d);
    cout << "MATRICE NAKON TRANSPONIRANJA" << endl;
    transponiraj<int> f;
    vector<matrica<int>>::iterator it, it1;
    it = V.begin(); it1 = V.end();
    for_each(it, it1, f);
    int i;
    for (i = 0; i < V.size(); i++)
        cout << V[i] << endl;
    cout << "MATRICE NAKON FUNKCIJE OCISTI ZA razina = 2" << endl;
    ocisti<int> g;
    for_each(it, it1, g, 2);
    for (i = 0; i < V.size(); i++)
        cout << V[i] << endl;
    cout << "TESTIRANJE ULANCAVANJA ISPISA" << endl;
    cout << a << b << c << d << endl;
    cout << "TESTIRANJE CASTANJA" << endl;
    cout << (int)a << endl;
    cout << (int)b << endl;
    cout << (double)a << endl;
    cout << (double)b << endl;
    cout << (double)c << endl;
    cout << (double)d << endl;
    cout << "TESTIRANJE >>" << endl;
    a >> 2;
    b >> 3;
    c >> 4;
    cout << c;
    d >> 5;
    c >> 1;
    cout << c;
    c >> 0;
    cout << c;

    return 0;
}